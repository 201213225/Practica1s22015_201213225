/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Estructuras.Matriz;
import Estructuras.Nodo_Lista;
import Estructuras.Nodo_Matriz;
import Graphviz.Graphviz;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.border.LineBorder;

/**
 *
 * @author Denis
 */
public class Tablero extends javax.swing.JFrame implements KeyListener {

    /**
     * Creates new form Tablero
     */
    Matriz Original;
    Matriz Tablero;
    Nodo_Matriz Puntero;
    Nodo_Lista Personaje;
    int corrimiento = 0;
    boolean salto = false, izquierda = false, derecha = false, doblesalto = false;

    public Tablero() {
        initComponents();
    }

    public Tablero(Matriz Tablero) {
        addKeyListener(this);
        initComponents();
        Original = Clone(Tablero);
        this.Tablero = Clone(Tablero);
        Puntero = this.Tablero.Raiz;
        Pintar();
        //addKeyListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Area = new javax.swing.JPanel();
        BtPausa = new javax.swing.JToggleButton();
        BtGraficar = new javax.swing.JButton();
        BtReiniciar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Area.setPreferredSize(new java.awt.Dimension(720, 360));

        javax.swing.GroupLayout AreaLayout = new javax.swing.GroupLayout(Area);
        Area.setLayout(AreaLayout);
        AreaLayout.setHorizontalGroup(
            AreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );
        AreaLayout.setVerticalGroup(
            AreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );

        BtPausa.setText("Pausa");
        BtPausa.setFocusable(false);
        BtPausa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtPausaActionPerformed(evt);
            }
        });

        BtGraficar.setText("Graficar");
        BtGraficar.setFocusable(false);
        BtGraficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtGraficarActionPerformed(evt);
            }
        });

        BtReiniciar.setText("Reiniciar");
        BtReiniciar.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtPausa, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtGraficar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtReiniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtPausa)
                    .addComponent(BtGraficar)
                    .addComponent(BtReiniciar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtPausaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtPausaActionPerformed
        // TODO add your handling code here:
        if(BtPausa.isSelected()){
            practica1s22015_201213225.Practica1s22015_201213225.Corre = false;
        }else{
            practica1s22015_201213225.Practica1s22015_201213225.Corre = true;
        }
        //System.out.println(practica1s22015_201213225.Practica1s22015_201213225.Corre);
    }//GEN-LAST:event_BtPausaActionPerformed

    private void BtGraficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtGraficarActionPerformed
        Graphviz Aux = new Graphviz(Tablero,0);
        Aux = new Graphviz(Tablero,1);
    }//GEN-LAST:event_BtGraficarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tablero().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Area;
    private javax.swing.JButton BtGraficar;
    private javax.swing.JToggleButton BtPausa;
    private javax.swing.JButton BtReiniciar;
    // End of variables declaration//GEN-END:variables

    private Matriz Clone(Matriz Tablero) {
        Matriz Retornar = new Matriz();
        Retornar.Incerdar_Columna();
        Nodo_Matriz Aux1 = Tablero.Raiz;
        while (Aux1.abajo != null) {
            Retornar.Incertar_Fila();
            Aux1 = Aux1.abajo;
        }
        Aux1 = Tablero.Raiz;
        while (Aux1.derecha != null) {
            Retornar.Incerdar_Columna();
            Aux1 = Aux1.derecha;
        }
        Aux1 = Tablero.Raiz;
        Nodo_Matriz Aux3 = Retornar.Raiz;
        while (Aux1 != null) {
            Nodo_Matriz Aux2 = Aux1;
            Nodo_Matriz Aux4 = Aux3;
            while (Aux2 != null) {
                //System.out.println("x:" + Aux2.X + " y:" + Aux2.Y);
                if (Aux2.Objeto != null) {
                    Nodo_Lista objeto = Aux2.Objeto;
                    Nodo_Lista Nuevo = new Nodo_Lista(objeto.indice, objeto.nombre, objeto.tipo, objeto.ruta);
                    if (Nuevo.tipo.equals("Principal")) {
                        Aux4.Principal = Nuevo;
                        Personaje = Nuevo;
                    } else if (Nuevo.tipo.equals("Ficha") || Nuevo.tipo.equals("Vida") || Nuevo.tipo.equals("Castillo")) {
                        Aux4.Item = Nuevo;
                    } else {
                        Aux4.Objeto = Nuevo;
                    }

                    Aux4.setIcon(Aux2.getIcon());
                }
                Aux4 = Aux4.derecha;
                Aux2 = Aux2.derecha;
            }
            Aux3 = Aux3.abajo;
            Aux1 = Aux1.abajo;
        }
        return Retornar;
    }

    private void Pintar() {
        if (Puntero == null && Tablero.Raiz != null) {
            Puntero = Tablero.Raiz;
        }
        if (Puntero != null) {
            //System.out.println("Hola");
            Nodo_Matriz Aux1 = Puntero;
            while (Aux1 != null) {
                //System.out.println("Aux1");
                Nodo_Matriz Aux2 = Aux1;
                while (Aux2 != null) {
                    //System.out.println("Aux2");
                    if (!Aux2.isVisible()) {
                        //System.out.println("No es visible");
                        Area.add(Aux2);
                        Aux2.setVisible(true);
                        Aux2.setBounds((Aux2.X + corrimiento) * 30, Aux2.Y * 30, 30, 30);
                        //aux.setText("Hola");
                        Aux2.setBorder(LineBorder.createGrayLineBorder());
                        Aux2.setOpaque(true);
                        //System.out.println(Color.);
                        //float a = 0.6;
                        Aux2.setBackground(Color.getHSBColor(0.63f, 0.45f, 1.0f));
                        //Area.revalidate();
                        //Area.repaint();
                        if (Aux2.getIcon() != null) {
                            if (Aux2.Objeto != null) {

                                Nodo_Lista Aux3 = Aux2.Objeto;

                                Aux3.casilla = Aux2;

                                if (!(Aux2.Objeto.tipo.equals("Suelo") && !(Aux2.Objeto.tipo.equals("Pared")))) {
                                    Aux3.running = true;
                                    Thread nuevo = new Thread(Aux2.Objeto);
                                    nuevo.start();
                                }
                                //System.out.println("Hilo agregado");

                            } else if (Aux2.Principal != null) {
                                Nodo_Lista Aux3 = Aux2.Principal;
                                Aux3.casilla = Aux2;
                                Aux3.running = true;
                                Thread nuevo = new Thread(Aux2.Principal);
                                nuevo.start();

                                KeyListener flechas;
                            } else if (Aux2.Item != null) {
                                Nodo_Lista Aux3 = Aux2.Item;

                                Aux3.casilla = Aux2;
                            }

                        }
                    }
                    Aux2 = Aux2.derecha;
                }
                Aux1 = Aux1.abajo;
            }
        }
    }

    private void mover() {

    }

    @Override
    public void keyTyped(KeyEvent e) {

    }

    @Override
    public void keyPressed(KeyEvent e) {
        if (e.getKeyCode() == KeyEvent.VK_UP) {
            if (!salto && Personaje.casilla.abajo!=null && !Personaje.VerificarCaida()) {
                salto = true;
                //System.out.println("Salto");
            } else if (!doblesalto 
                    && !derecha 
                    && !izquierda 
                    && Personaje.casilla.abajo.abajo!=null 
                    && Personaje.casilla.abajo.abajo.Objeto!=null
                    && (Personaje.casilla.abajo.abajo.Objeto.equals("Suelo")|| Personaje.casilla.abajo.abajo.Objeto.equals("Pared"))) {
                doblesalto = true;
                //System.out.println("DobleSalto");
            }
        } else if (e.getKeyCode() == KeyEvent.VK_LEFT && !doblesalto) {
            izquierda = true;
            if(Personaje.VerificarIzqP()){
                Personaje.MoverIzquierdaP();
            }
            //System.out.println("Derecha");
        } else if (e.getKeyCode() == KeyEvent.VK_RIGHT && !doblesalto) {
            derecha = true;
            if(Personaje.VerificarDerP()){
                Personaje.MoverDerechaP();
            }
            //System.out.println("Izquierda");
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {
        if (e.getKeyCode() == KeyEvent.VK_UP) {
            salto = false;
            doblesalto = false;
        } else if (e.getKeyCode() == KeyEvent.VK_LEFT) {
            izquierda = false;
        } else if (e.getKeyCode() == KeyEvent.VK_RIGHT) {
            derecha = false;
        }
    }

}
